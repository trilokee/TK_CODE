spring.datasource.url=jdbc:mysql://localhost:3306/reservation
spring.datasource.username=root
spring.datasource.password=123456
spring.jpa.show-sql=true



#set the internal view resolver component,which will look for prefix-/WEB-INF/jsps-----it the path of the jsp pases 
spring.mvc.view.prefix=/WEB-INF/jsps/
spring.mvc.view.suffix=.jsp


#server.port=3333


#what happens when we inter the uri---http://localhost:8080/showCreate
#1.request goes to container 
#2.then spring container will route the request to the location controller--where @RequestMapping anooted the method showCreate()
#3.annoteted/mapped method showCreate() will be invoked
#4.now internal view resolver of spring will take place and will use the prefix ns suffix nad serves the apprioate page
#5.

server.servlet.context-path=/flightreservation

#setting the mail host
#setting the mail port
#smtp-simple mail transfer protocol
#auth-authenthetication
#tls-transport layer security
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=pk8477053
spring.mail.password=@tn33333
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.auth=true

#DEBUG
#logging.level.org.springframework.security=DEBUG

#EXTERNALIZATION
com.trilokee.flightreservation.itinerary.dirpath=/C:/Users/Trilokee/Documents/reservations/reservation
com.trilokee.flightreservation.itinerary.email.body=Please find your itinerary in the  Attachment
com.trilokee.flightreservation.itinerary.email.subject=Sending Itinerary of your filght

#REST-representational state transfer